#!/usr/bin/env bash

if which uv >/dev/null; then
    for VER in 3.{8..13}; do
        TARGET="$HOME/.local/bin/python$VER"
        if [ -f "$TARGET" ]; then
            continue
        fi
        EXE=$(uv python find "$VER" 2>/dev/null)
        if [[ -n "$EXE" ]]; then
            ln -sf "$EXE" "$TARGET"
        fi
    done
fi

export C_INCLUDE_PATH=/usr/include/x86_64-linux-gnu
export PATH="$HOME/.local/bin:/usr/include/x86_64-linux-gnu:$PATH"
[ -f ${CARGO_ENV:="$HOME/.cargo/env"} ] && . "$CARGO_ENV"

if test "$VIRTUAL_ENV" && [ "$VIRTUAL_ENV" != "$PWD/.venv" ]; then
    OLD_VENV_ESCAPED="${VIRTUAL_ENV///}"
    . $VIRTUAL_ENV/*/activate
    deactivate
    export PATH=$(echo "$PATH" | sed -e "s/:${OLD_VENV}//")
fi

[ -d "$PWD/.venv/bin" ] && . ".venv/bin/activate"
[ -d "$PWD/.venv/Scripts" ] && . ".venv/Scripts/activate"

if [ -f "$PWD/python" ]; then
    export PATH="$PWD:$PATH"
fi

# Printbox
export PATH="$PATH:$HOME/.local/bin-eks"
export KUBECONFIG=$HOME/.kube/eks.config
# Printbox end

# pnpm
export PNPM_HOME="/home/bswck/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# fnm
FNM_PATH="/home/bswck/.local/share/fnm"
if [ -d "$FNM_PATH" ]; then
  export PATH="$FNM_PATH:$PATH"
  eval "`fnm env`"
fi
