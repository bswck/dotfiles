#!/usr/bin/env bash

export PYTHONSTARTUP="$HOME/pythonrc.py"
export C_INCLUDE_PATH=/usr/include/x86_64-linux-gnu
export PATH="$HOME/.local/bin:/usr/include/x86_64-linux-gnu:$PATH"
export ANDROID_HOME="$HOME/Android/Sdk"
export JAVA_HOME="/usr/lib/jvm/java-21-openjdk-21.0.8.0.9-1.fc42.x86_64"
export MSYS=winsymlinks:nativestrict

[ -f ${CARGO_ENV:="$HOME/.cargo/env"} ] && . "$CARGO_ENV"

source "$HOME/.urls"

export PNPM_HOME="$HOME/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac

[ -d "$HOME/.flutter-sdk" ] && {
    export PATH="$PATH:$HOME/.flutter-sdk/flutter/bin"
}

[ -d "$HOME/Android/Sdk" ] && {
    export PATH="$PATH:$HOME/Android/Sdk/cmdline-tools/latest/bin"
}

[ -d "/home/linuxbrew/.linuxbrew" ] && {
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
}

export ROOT_DIR=$(git rev-parse --show-toplevel 2>/dev/null || echo "$PWD")

if [ -f "$PWD/python" ]; then
    export PATH="$PWD:$PATH"
elif [ -f "$PWD/python.bat" ]; then
    alias python="$PWD/python.bat"
fi

[[ "$PWD" != "$HOME/Pawamoy"* ]] && ! test "$VIRTUAL_ENV" && [ -d "$ROOT_DIR/.venv" ] && VIRTUAL_ENV="$ROOT_DIR/.venv"

: Clean up the old venv
[ "$VIRTUAL_ENV" != "$PWD/.venv" ] && {
    OLD_VENV_ESCAPED="${VIRTUAL_ENV///}"
    [ -f $VIRTUAL_ENV/*/activate ] && . $VIRTUAL_ENV/*/activate
    test "$(which deactivate 2>/dev/null)" && deactivate
    unset VIRTUAL_ENV
    export PATH=$(echo "$PATH" | sed -e "s/:${OLD_VENV}/:/")
}


[ -n "$VIRTUAL_ENV" ] && {
    : Activate the actual venv
    [ -d ".venv" ] && {
        VIRTUAL_ENV=".venv"
        [ -d "$VIRTUAL_ENV/bin" ] && . "$VIRTUAL_ENV/bin/activate"
        [ -d "$VIRTUAL_ENV/Scripts" ] && . "$VIRTUAL_ENV/Scripts/activate"
    }
}

if [ -f "/home/linuxbrew/.linuxbrew/bin/brew" ]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

if which direnv >/dev/null 2>&1; then
    eval "$(direnv hook bash)"
fi

if which starship >/dev/null 2>&1; then
    eval "$(starship init bash)"
    starship_precmd
fi

